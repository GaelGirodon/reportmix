<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.5/css/bulma.min.css">
    <style>
        th, td {
            white-space: nowrap;
        }
    </style>
</head>
<body>
<section class="hero is-dark">
    <div class="hero-body">
        <div class="container">
            <h1 class="title">
                {{ title }}
            </h1>
            <h2 class="subtitle">
                {{ tools.keys() | list | sort | join(" Â· ") }}
            </h2>
        </div>
    </div>
</section>
<section class="hero is-light">
    <div class="hero-body">
        <div class="container">
            <div class="columns has-text-centered" style="margin-bottom: 2rem">
                <div class="column is-one-third">
                    <h3 class="title is-5">Number of issues by tool</h3>
                </div>
                <div class="column is-one-third">
                    <h3 class="title is-5">Number of issues by severity</h3>
                </div>
                <div class="column is-one-third">
                    <h3 class="title is-5">Number of issues by type</h3>
                </div>
            </div>
            <div class="columns">
                <div class="column is-one-third">
                    <canvas id="issuesByTool"></canvas>
                </div>
                <div class="column is-one-third">
                    <canvas id="issuesBySeverity"></canvas>
                </div>
                <div class="column is-one-third">
                    <canvas id="issuesByType"></canvas>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="section">
    <div class="container">
        <div class="table-container">
            <table class="table is-striped is-hoverable is-fullwidth">
                <thead>
                <tr>
                    <th>#</th>
                    <th>Tool name</th>
                    <th>Tool version</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Description</th>
                    <th>Identifier</th>
                    <th>Severity</th>
                    <th>Score</th>
                    <th>Confidence</th>
                    <th>Count</th>
                    <th>Source</th>
                    <th>Scan date</th>
                    <th>Subject id</th>
                    <th>Subject name</th>
                    <th>Subject description</th>
                    <th>Subject location</th>
                    <th>Project id</th>
                    <th>Project name</th>
                    <th>Project description</th>
                    <th>Project version</th>
                </tr>
                </thead>
                <tbody>
                {% for issue in issues %}
                    <tr>
                        <th>{{ loop.index }}</th>
                        <td>{{ issue.tool_name }}</td>
                        <td>{{ issue.tool_version }}</td>
                        <td>{{ issue.name | limit(48) }}</td>
                        <td>{{ issue.type }}</td>
                        <td>{{ issue.description | limit }}</td>
                        <td>{{ issue.identifier }}</td>
                        <td>{{ issue.severity }}</td>
                        <td>{{ issue.score }}</td>
                        <td>{{ issue.confidence }}</td>
                        <td>{{ issue.count }}</td>
                        <td>{{ issue.source }}</td>
                        <td>{{ issue.scan_date }}</td>
                        <td>{{ issue.subject_id }}</td>
                        <td>{{ issue.subject_name | limit(48) }}</td>
                        <td>{{ issue.subject_description | limit }}</td>
                        <td>{{ issue.subject_location }}</td>
                        <td>{{ issue.project_id }}</td>
                        <td>{{ issue.project_name | limit(48) }}</td>
                        <td>{{ issue.project_description | limit }}</td>
                        <td>{{ issue.project_version }}</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</section>
<footer class="footer">
    <div class="content has-text-centered">
        <p>
            Generated by <a href="https://github.com/GaelGirodon/reportmix"><strong>ReportMix</strong></a>.
        </p>
    </div>
</footer>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0"></script>
<script>
    // Configuration
    var borderColor = "#f5f5f5";
    var backgroundColors = ["#0097e6", "#8c7ae6", "#192a56", "#40739e", "#dcdde1", "#718093"];
    Chart.helpers.merge(Chart.defaults.global.plugins.datalabels, {
        backgroundColor: "#000000aa",
        color: "#ffffff",
        borderRadius: 2,
        padding: {left: 6, right: 6},
        display: function (context) {
            return context.dataset.data[context.dataIndex] > 0;
        }
    });
    // Issues by tool
    var issuesByToolCxt = document.getElementById('issuesByTool');
    var issuesByToolChart = new Chart(issuesByToolCxt, {
        type: 'doughnut',
        data: {
            labels: {{ tools.keys() | list | tojson }},
            datasets: [{
                data: {{ tools.values() | list | tojson }},
                backgroundColor: backgroundColors,
                borderColor: borderColor
            }]
        },
        options: {
            legend: {
                position: 'right'
            }
        }
    });
    // Issues by severity
    var issuesBySeverityCxt = document.getElementById('issuesBySeverity');
    var issuesBySeverityChart = new Chart(issuesBySeverityCxt, {
        type: 'doughnut',
        data: {
            labels: {{ severities.keys() | list | tojson }},
            datasets: [{
                data: {{ severities.values() | list | tojson }},
                backgroundColor: ["#d1d8e0", "#45aaf2", "#fed330", "#fa8231", "#eb3b5a", "#a55eea"],
                borderColor: borderColor
            }]
        },
        options: {
            legend: {
                position: 'right'
            }
        }
    });
    // Issues by type
    var issuesByTypeCxt = document.getElementById('issuesByType');
    var issuesByTypeChart = new Chart(issuesByTypeCxt, {
        type: 'doughnut',
        data: {
            labels: {{ types.keys() | list | tojson }},
            datasets: [{
                data: {{ types.values() | list | tojson }},
                backgroundColor: backgroundColors.reverse(),
                borderColor: borderColor
            }]
        },
        options: {
            legend: {
                position: 'right'
            }
        }
    });
</script>
</body>
</html>
