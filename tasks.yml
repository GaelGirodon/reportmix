# tasks.yml

variables:
  PIPENV_VENV_IN_PROJECT: 1
shell: bash

# Create virtual environment and install dependencies
setup:
  script: pipenv install

# Run reportmix inside the virtualenv
mix:
  params:
    - ARGS
  script: pipenv run python reportmix.py $ARGS

# Run unit tests
test:
  script: pipenv run pytest -v

# A basic health check test
healthcheck:
  shell: powershell
  script: ./scripts/Invoke-HealthCheck.ps1

# Build package
package:
  script:
    - python -m pip install --upgrade --quiet setuptools wheel twine
    - python setup.py --quiet sdist bdist_wheel

# Install locally
install:
  script: python setup.py install

# Check and publish to PyPI
publish:
  script:
    - python -m twine check dist/*
    - echo "python -m twine upload dist/*"

# Clean dist
clean:
  script: rm -r build dist *.egg-info || true
